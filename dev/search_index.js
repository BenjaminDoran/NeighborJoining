var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = NeighborJoining","category":"page"},{"location":"#NeighborJoining","page":"Home","title":"NeighborJoining","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for NeighborJoining.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [NeighborJoining]","category":"page"},{"location":"#NeighborJoining._distance_to_new_node-Tuple{AbstractMatrix{<:Number}, Integer, Integer, Integer}","page":"Home","title":"NeighborJoining._distance_to_new_node","text":"distance from existing nodes to new nodes \n\n\n\n\n\n","category":"method"},{"location":"#NeighborJoining._distance_to_parent-Tuple{AbstractMatrix{<:Number}, AbstractVector{<:Bool}, Integer, Integer}","page":"Home","title":"NeighborJoining._distance_to_parent","text":"take distance matrix and current indices and calculates position of parent linking nodes i and j \n\n\n\n\n\n","category":"method"},{"location":"#NeighborJoining._mergeidx-Tuple{Any, Any}","page":"Home","title":"NeighborJoining._mergeidx","text":"return -x if less then or equal to n otherwise return x-n \n\n\n\n\n\n","category":"method"}]
}
